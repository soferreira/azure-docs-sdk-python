### YamlMime:PythonClass
uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations
name: StreamingEndpointsOperations
fullName: azure.mgmt.media.aio.operations.StreamingEndpointsOperations
module: azure.mgmt.media.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.media.aio.AzureMediaServices>'s\n\
  >\n> <xref:streaming_endpoints> attribute.\n>"
constructor:
  syntax: StreamingEndpointsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.begin_create
  name: begin_create
  summary: 'Create StreamingEndpoint.


    Creates a streaming endpoint.'
  signature: 'async begin_create(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, parameters: azure.mgmt.media.models._models_py3.StreamingEndpoint, auto_start:
    Optional[bool] = None, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.media.models._models_py3.StreamingEndpoint]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Streaming endpoint properties needed for creation.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpoint>
  - name: auto_start
    description: 'The flag indicates if the resource should be automatically started
      on

      creation. Default value is None.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either StreamingEndpoint
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.media.models.StreamingEndpoint>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.begin_delete
  name: begin_delete
  summary: 'Delete StreamingEndpoint.


    Deletes a streaming endpoint.'
  signature: 'async begin_delete(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.begin_scale
  name: begin_scale
  summary: 'Scale StreamingEndpoint.


    Scales an existing streaming endpoint.'
  signature: 'async begin_scale(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, parameters: azure.mgmt.media.models._models_py3.StreamingEntityScaleUnit,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Streaming endpoint scale parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingEntityScaleUnit>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.begin_start
  name: begin_start
  summary: 'Start StreamingEndpoint.


    Starts an existing streaming endpoint.'
  signature: 'async begin_start(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.begin_stop
  name: begin_stop
  summary: 'Stop StreamingEndpoint.


    Stops an existing streaming endpoint.'
  signature: 'async begin_stop(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.begin_update
  name: begin_update
  summary: 'Update StreamingEndpoint.


    Updates a existing streaming endpoint.'
  signature: 'async begin_update(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, parameters: azure.mgmt.media.models._models_py3.StreamingEndpoint, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.media.models._models_py3.StreamingEndpoint]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Streaming endpoint properties needed for creation.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpoint>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either StreamingEndpoint
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.media.models.StreamingEndpoint>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.get
  name: get
  summary: 'Get StreamingEndpoint.


    Gets a streaming endpoint.'
  signature: 'async get(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, **kwargs: Any) -> azure.mgmt.media.models._models_py3.StreamingEndpoint'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: StreamingEndpoint, or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpoint>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.list
  name: list
  summary: 'List StreamingEndpoints.


    Lists the streaming endpoints in the account.'
  signature: 'list(resource_group_name: str, account_name: str, **kwargs: Any) ->
    AsyncIterable[azure.mgmt.media.models._models_py3.StreamingEndpointListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either StreamingEndpointListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.media.models.StreamingEndpointListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.skus
  name: skus
  summary: 'List StreamingEndpoint skus.


    List streaming endpoint supported skus.'
  signature: 'async skus(resource_group_name: str, account_name: str, streaming_endpoint_name:
    str, **kwargs: Any) -> azure.mgmt.media.models._models_py3.StreamingEndpointSkuInfoListResult'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: StreamingEndpointSkuInfoListResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpointSkuInfoListResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.media.aio.operations.StreamingEndpointsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.media.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
