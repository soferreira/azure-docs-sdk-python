### YamlMime:PythonClass
uid: azure.mgmt.media.aio.operations.LocationsOperations
name: LocationsOperations
fullName: azure.mgmt.media.aio.operations.LocationsOperations
module: azure.mgmt.media.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.media.aio.AzureMediaServices>'s\n\
  >\n> <xref:locations> attribute.\n>"
constructor:
  syntax: LocationsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.media.aio.operations.LocationsOperations.check_name_availability
  name: check_name_availability
  summary: 'Check Name Availability.


    Checks whether the Media Service resource name is available.'
  signature: 'async check_name_availability(location_name: str, parameters: azure.mgmt.media.models._models_py3.CheckNameAvailabilityInput,
    **kwargs: Any) -> azure.mgmt.media.models._models_py3.EntityNameAvailabilityCheckOutput'
  parameters:
  - name: location_name
    description: Location name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The request parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.CheckNameAvailabilityInput>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EntityNameAvailabilityCheckOutput, or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.EntityNameAvailabilityCheckOutput>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.media.aio.operations.LocationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.media.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
